name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run nightly at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
        shard: [1, 2, 3]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps ${{ matrix.browser }}
    
    - name: Run E2E Tests - ${{ matrix.browser }} (Shard ${{ matrix.shard }}/3)
      run: npx playwright test --project=${{ matrix.browser }} --shard=${{ matrix.shard }}/3
      env:
        CI: true
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: playwright-report-${{ matrix.browser }}-${{ matrix.shard }}
        path: e2e-reports/
        retention-days: 30
    
    - name: Upload screenshots
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: screenshots-${{ matrix.browser }}-${{ matrix.shard }}
        path: e2e/screenshots/
        retention-days: 7

  merge-reports:
    needs: e2e-tests
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: all-reports/
    
    - name: Merge test reports
      run: |
        npm install --no-save @playwright/test
        npx playwright merge-reports --reporter html ./all-reports
    
    - name: Upload merged report
      uses: actions/upload-artifact@v3
      with:
        name: playwright-report-merged
        path: playwright-report/
        retention-days: 30
    
    - name: Comment PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const results = JSON.parse(fs.readFileSync('./e2e-reports/results.json', 'utf8'));
          
          const comment = `
          ## üé≠ E2E Test Results
          
          - **Total Tests**: ${results.total}
          - **Passed**: ‚úÖ ${results.passed}
          - **Failed**: ‚ùå ${results.failed}
          - **Skipped**: ‚è≠Ô∏è ${results.skipped}
          - **Duration**: ‚è±Ô∏è ${results.duration}ms
          
          [View Full Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });